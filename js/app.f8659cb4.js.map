{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/App.vue?bade","webpack:///./src/components/Catchable.vue?31bc","webpack:///src/components/Catchable.vue","webpack:///./src/components/Catchable.vue?4a5a","webpack:///./src/components/Catchable.vue","webpack:///src/App.vue","webpack:///./src/App.vue?1160","webpack:///./src/App.vue","webpack:///./src/data/fish.js","webpack:///./src/store/index.js","webpack:///./src/main.js","webpack:///./src/constants.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","_vm","this","_h","$createElement","_c","_self","_v","attrs","model","callback","$$v","hemisphere","expression","monthOptions","month","time","onlyCatchable","onlyUncaught","_l","f","directives","rawName","shouldShowCatchable","id","staticRenderFns","catchableIcon","_s","formattedMonths","formattedTimes","caught","props","list","String","computed","set","$store","dispatch","isCatchable","isCatchableTime","isCatchableMonth","allDay","start","end","hour","months","allYear","ranges","some","range","methods","formatTime","watch","immediate","handler","newVal","component","components","Catchable","currentTime","canCatch","JSON","parse","Vue","use","Vuex","Store","state","fish","fishData","map","getters","parseInt","split","mutations","updateHemisphere","updateTime","updateMonth","updateCanCatch","index","findIndex","updateCaught","actions","commit","config","productionTip","BootstrapVue","IconsPlugin","store","render","h","App","$mount","1","2","3","4","5","6","7","8","9","10","11","12"],"mappings":"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","file":"js/app.f8659cb4.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/acnh-tracker/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('b-container',[_c('b-row',[_c('b-col',[_c('h2',[_vm._v(\"Animal Crossing: New Horizons\")]),_c('h3',[_vm._v(\"Collectables Tracker\")])])],1),_c('b-row',[_c('b-col',{attrs:{\"cols\":\"3\"}},[_c('b-form-group',{attrs:{\"label\":\"Hemisphere\"}},[_c('b-form-radio',{attrs:{\"name\":\"hemisphere-radios\",\"value\":\"north\"},model:{value:(_vm.hemisphere),callback:function ($$v) {_vm.hemisphere=$$v},expression:\"hemisphere\"}},[_vm._v(\" North \")]),_c('b-form-radio',{attrs:{\"name\":\"hemisphere-radios\",\"value\":\"south\"},model:{value:(_vm.hemisphere),callback:function ($$v) {_vm.hemisphere=$$v},expression:\"hemisphere\"}},[_vm._v(\" South \")])],1)],1),_c('b-col',{attrs:{\"cols\":\"3\"}},[_c('b-form-group',{attrs:{\"label\":\"Month\"}},[_c('b-select',{attrs:{\"options\":_vm.monthOptions},model:{value:(_vm.month),callback:function ($$v) {_vm.month=$$v},expression:\"month\"}})],1)],1),_c('b-col',{attrs:{\"cols\":\"3\"}},[_c('b-form-group',{attrs:{\"label\":\"Time\"}},[_c('b-form-timepicker',{attrs:{\"now-button\":\"\"},model:{value:(_vm.time),callback:function ($$v) {_vm.time=$$v},expression:\"time\"}})],1)],1),_c('b-col',{attrs:{\"cols\":\"3\"}},[_c('b-form-group',{attrs:{\"label\":\"Only Show Catchable\",\"label-cols\":\"8\"}},[_c('b-form-checkbox',{model:{value:(_vm.onlyCatchable),callback:function ($$v) {_vm.onlyCatchable=$$v},expression:\"onlyCatchable\"}})],1),_c('b-form-group',{attrs:{\"label\":\"Only Show Uncaught\",\"label-cols\":\"8\"}},[_c('b-form-checkbox',{model:{value:(_vm.onlyUncaught),callback:function ($$v) {_vm.onlyUncaught=$$v},expression:\"onlyUncaught\"}})],1)],1)],1),_c('b-row',[_c('b-col',[_c('h4',[_vm._v(\"Fish\")]),_vm._l((_vm.fish),function(f){return _c('b-card',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.shouldShowCatchable(f)),expression:\"shouldShowCatchable(f)\"}],key:f.id},[_c('catchable',{attrs:{\"value\":f,\"list\":\"fish\"}})],1)})],2)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{},[_c('b-icon',{attrs:{\"icon\":_vm.catchableIcon}}),_vm._v(\" \"+_vm._s(_vm.value.id)+\" \"+_vm._s(_vm.value.name)+\" \"),_c('br'),_vm._v(\" Months: \"+_vm._s(_vm.formattedMonths)+\" \"),_c('br'),_vm._v(\" Times: \"+_vm._s(_vm.formattedTimes)+\" \"),_c('br'),_c('b-row'),_c('b-form-group',{attrs:{\"label\":\"Caught\",\"label-cols\":\"1\"}},[_c('b-form-checkbox',{model:{value:(_vm.caught),callback:function ($$v) {_vm.caught=$$v},expression:\"caught\"}})],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div style=\"\">\n    <b-icon :icon=\"catchableIcon\" />\n    {{ value.id }} {{ value.name }}\n    <br />\n    Months: {{ formattedMonths }}\n    <br />\n    Times: {{ formattedTimes }}\n    <br />\n    <b-row></b-row>\n    <b-form-group label=\"Caught\" label-cols=\"1\">\n      <b-form-checkbox v-model=\"caught\"/>\n    </b-form-group>\n  </div>\n</template>\n\n<script>\nimport { mapState, mapGetters } from 'vuex';\nimport { months } from '../constants';\n\nexport default {\n  name: 'Catchable',\n  props: {\n    value: Object,\n    list: String,\n  },\n\n  computed: {\n    ...mapState(['hemisphere', 'month']),\n    ...mapGetters(['hour']),\n\n    caught: {\n      get() {\n        return this.value.caught;\n      },\n      set(value) {\n        this.$store.dispatch('updateCaught', {\n          id: this.value.id,\n          value,\n          list: this.list,\n        });\n      },\n    },\n\n    isCatchable() {\n      return this.isCatchableTime && this.isCatchableMonth;\n    },\n\n    isCatchableTime() {\n      if (this.value.time.allDay) return true;\n\n      if (this.value.time.start <= this.value.time.end) {\n        return this.hour >= this.value.time.start && this.hour < this.value.time.end;\n      }\n\n      return this.hour >= this.value.time.start || this.hour < this.value.time.end;\n    },\n\n    isCatchableMonth() {\n      if (this.months.allYear) return true;\n\n      return this.months.ranges.some((range) => {\n        if (range.start < range.end) {\n          return this.month >= range.start && this.month <= range.end;\n        }\n        return this.month >= range.start || this.month <= range.end;\n      });\n    },\n\n    catchableIcon() {\n      if (this.isCatchable) return 'check-circle';\n      return 'x-circle';\n    },\n\n    months() {\n      return {\n        allYear: this.value.months.allYear,\n        ranges: this.value.months[this.hemisphere],\n      };\n    },\n\n    formattedMonths() {\n      if (this.months.allYear) return 'All Year';\n      return this.months.ranges\n        .map((m) => {\n          if (m.start === m.end) return months[m.start];\n          return `${months[m.start]} - ${months[m.end]}`;\n        })\n        .join(', ');\n    },\n\n    formattedTimes() {\n      if (this.value.time.allDay) return 'All Day';\n      return `${this.formatTime(this.value.time.start)} - ${this.formatTime(this.value.time.end)}`;\n    },\n  },\n\n  methods: {\n    formatTime(time) {\n      if (time === 12) return `${time} pm`;\n      if (time > 12) return `${time - 12} pm`;\n      return `${time} am`;\n    },\n  },\n\n  watch: {\n    isCatchable: {\n      immediate: true,\n      handler(newVal) {\n        this.$store.dispatch('updateCanCatch', {\n          id: this.value.id,\n          value: newVal,\n          list: this.list,\n        });\n      },\n    },\n  },\n};\n</script>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Catchable.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Catchable.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Catchable.vue?vue&type=template&id=ba1eed76&\"\nimport script from \"./Catchable.vue?vue&type=script&lang=js&\"\nexport * from \"./Catchable.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<template>\n  <b-container>\n    <b-row>\n      <b-col>\n        <h2>Animal Crossing: New Horizons</h2>\n        <h3>Collectables Tracker</h3>\n      </b-col>\n    </b-row>\n    <b-row>\n      <b-col cols=\"3\">\n        <b-form-group label=\"Hemisphere\">\n          <b-form-radio\n            v-model=\"hemisphere\"\n            name=\"hemisphere-radios\"\n            value=\"north\"\n          >\n            North\n          </b-form-radio>\n          <b-form-radio\n            v-model=\"hemisphere\"\n            name=\"hemisphere-radios\"\n            value=\"south\"\n          >\n            South\n          </b-form-radio>\n        </b-form-group>\n      </b-col>\n      <b-col cols=\"3\">\n\n        <b-form-group label=\"Month\">\n          <b-select v-model=\"month\" :options=\"monthOptions\" />\n        </b-form-group>\n      </b-col>\n      <b-col cols=\"3\">\n\n        <b-form-group label=\"Time\">\n          <b-form-timepicker\n            now-button\n            v-model=\"time\"\n          />\n        </b-form-group>\n      </b-col>\n      <b-col cols=\"3\">\n        <b-form-group label=\"Only Show Catchable\" label-cols=\"8\">\n          <b-form-checkbox v-model=\"onlyCatchable\" />\n        </b-form-group>\n        <b-form-group label=\"Only Show Uncaught\" label-cols=\"8\">\n          <b-form-checkbox v-model=\"onlyUncaught\"/>\n        </b-form-group>\n      </b-col>\n    </b-row>\n    <b-row>\n      <b-col>\n        <h4>Fish</h4>\n        <b-card\n          v-for=\"f in fish\"\n          :key=\"f.id\"\n          v-show=\"shouldShowCatchable(f)\"\n        >\n          <catchable :value=\"f\" list=\"fish\"/>\n        </b-card>\n      </b-col>\n      <!-- <b-col>\n        <h4>Bugs</h4>\n      </b-col>\n      <b-col>\n        <h4>Fossils</h4>\n      </b-col> -->\n    </b-row>\n  </b-container>\n</template>\n\n<script>\nimport { mapState, mapGetters } from 'vuex';\nimport Catchable from './components/Catchable.vue';\n\nexport default {\n  name: 'App',\n\n  components: {\n    Catchable,\n  },\n\n  data() {\n    return {\n      onlyCatchable: false,\n      onlyUncaught: false,\n\n      monthOptions: [\n        { text: 'January', value: 1 },\n        { text: 'February', value: 2 },\n        { text: 'March', value: 3 },\n        { text: 'April', value: 4 },\n        { text: 'May', value: 5 },\n        { text: 'June', value: 6 },\n        { text: 'July', value: 7 },\n        { text: 'August', value: 8 },\n        { text: 'September', value: 9 },\n        { text: 'October', value: 10 },\n        { text: 'November', value: 11 },\n        { text: 'December', value: 12 },\n      ],\n    };\n  },\n  methods: {\n    currentTime() {\n      const today = new Date();\n      return `${today.getHours()}:${today.getMinutes()}:${today.getSeconds()}`;\n    },\n    shouldShowCatchable({ canCatch, caught }) {\n      if (this.onlyCatchable && !canCatch) return false;\n      if (this.onlyUncaught && caught) return false;\n      return true;\n    },\n  },\n  computed: {\n    ...mapState(['fish']),\n    ...mapGetters(['hour']),\n\n    hemisphere: {\n      get() { return this.$store.state.hemisphere; },\n      set(value) { this.$store.dispatch('updateHemisphere', value); },\n    },\n    time: {\n      get() { return this.$store.state.time; },\n      set(value) { this.$store.dispatch('updateTime', value); },\n    },\n    month: {\n      get() { return this.$store.state.month; },\n      set(value) { this.$store.dispatch('updateMonth', value); },\n    },\n  },\n};\n</script>\n","import mod from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=38f1df9a&\"\nimport script from \"./App.vue?vue&type=script&lang=js&\"\nexport * from \"./App.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","export default JSON.parse(`[\n  {\n    \"id\": 1,\n    \"name\": \"Bitterling\",\n    \"location\": \"River\",\n    \"size\": \"Smallest\",\n    \"price\": 900,\n    \"time\": {\n      \"allDay\": true,\n      \"start\": null,\n      \"end\": null\n    },\n    \"months\": {\n      \"allYear\": false,\n      \"north\": [\n        {\n          \"start\": 11,\n          \"end\": 3\n        }\n      ],\n      \"south\": [\n        {\n          \"start\": 5,\n          \"end\": 9\n        }\n      ]\n    }\n  },\n  {\n    \"id\": 2,\n    \"name\": \"Pale Chub\",\n    \"location\": \"River\",\n    \"size\": \"Smallest\",\n    \"price\": 160,\n    \"time\": {\n      \"allDay\": false,\n      \"start\": 9,\n      \"end\": 16\n    },\n    \"months\": {\n      \"allYear\": true,\n      \"north\": [\n        {\n          \"start\": null,\n          \"end\": null\n        }\n      ],\n      \"south\": [\n        {\n          \"start\": null,\n          \"end\": null\n        }\n      ]\n    }\n  },\n  {\n    \"id\": 3,\n    \"name\": \"Crucian Carp\",\n    \"location\": \"River\",\n    \"size\": \"Small\",\n    \"price\": 160,\n    \"time\": {\n      \"allDay\": true,\n      \"start\": null,\n      \"end\": null\n    },\n    \"months\": {\n      \"allYear\": true,\n      \"north\": [\n        {\n          \"start\": null,\n          \"end\": null\n        }\n      ],\n      \"south\": [\n        {\n          \"start\": null,\n          \"end\": null\n        }\n      ]\n    }\n  },\n  {\n    \"id\": 4,\n    \"name\": \"Dace\",\n    \"location\": \"River\",\n    \"size\": \"Medium\",\n    \"price\": 240,\n    \"time\": {\n      \"allDay\": false,\n      \"start\": 16,\n      \"end\": 9\n    },\n    \"months\": {\n      \"allYear\": true,\n      \"north\": [\n        {\n          \"start\": null,\n          \"end\": null\n        }\n      ],\n      \"south\": [\n        {\n          \"start\": null,\n          \"end\": null\n        }\n      ]\n    }\n  },\n  {\n    \"id\": 5,\n    \"name\": \"Carp\",\n    \"location\": \"Pond\",\n    \"size\": \"Large\",\n    \"price\": 300,\n    \"time\": {\n      \"allDay\": true,\n      \"start\": null,\n      \"end\": null\n    },\n    \"months\": {\n      \"allYear\": true,\n      \"north\": [\n        {\n          \"start\": null,\n          \"end\": null\n        }\n      ],\n      \"south\": [\n        {\n          \"start\": null,\n          \"end\": null\n        }\n      ]\n    }\n  },\n  {\n    \"id\": 6,\n    \"name\": \"Koi\",\n    \"location\": \"Pond\",\n    \"size\": \"Large\",\n    \"price\": \"4,000\",\n    \"time\": {\n      \"allDay\": false,\n      \"start\": 16,\n      \"end\": 9\n    },\n    \"months\": {\n      \"allYear\": true,\n      \"north\": [\n        {\n          \"start\": null,\n          \"end\": null\n        }\n      ],\n      \"south\": [\n        {\n          \"start\": null,\n          \"end\": null\n        }\n      ]\n    }\n  },\n  {\n    \"id\": 7,\n    \"name\": \"Goldfish\",\n    \"location\": \"Pond\",\n    \"size\": \"Smallest\",\n    \"price\": \"1,300\",\n    \"time\": {\n      \"allDay\": true,\n      \"start\": null,\n      \"end\": null\n    },\n    \"months\": {\n      \"allYear\": true,\n      \"north\": [\n        {\n          \"start\": null,\n          \"end\": null\n        }\n      ],\n      \"south\": [\n        {\n          \"start\": null,\n          \"end\": null\n        }\n      ]\n    }\n  },\n  {\n    \"id\": 8,\n    \"name\": \"Pop-eyed Goldfish\",\n    \"location\": \"Pond\",\n    \"size\": \"Smallest\",\n    \"price\": \"1,300\",\n    \"time\": {\n      \"allDay\": false,\n      \"start\": 9,\n      \"end\": 16\n    },\n    \"months\": {\n      \"allYear\": true,\n      \"north\": [\n        {\n          \"start\": null,\n          \"end\": null\n        }\n      ],\n      \"south\": [\n        {\n          \"start\": null,\n          \"end\": null\n        }\n      ]\n    }\n  },\n  {\n    \"id\": 9,\n    \"name\": \"Ranchu Goldfish\",\n    \"location\": \"Pond\",\n    \"size\": \"Small\",\n    \"price\": \"4,500\",\n    \"time\": {\n      \"allDay\": false,\n      \"start\": 9,\n      \"end\": 16\n    },\n    \"months\": {\n      \"allYear\": true,\n      \"north\": [\n        {\n          \"start\": null,\n          \"end\": null\n        }\n      ],\n      \"south\": [\n        {\n          \"start\": null,\n          \"end\": null\n        }\n      ]\n    }\n  },\n  {\n    \"id\": 10,\n    \"name\": \"Killifish\",\n    \"location\": \"Pond\",\n    \"size\": \"Smallest\",\n    \"price\": 300,\n    \"time\": {\n      \"allDay\": true,\n      \"start\": null,\n      \"end\": null\n    },\n    \"months\": {\n      \"allYear\": false,\n      \"north\": [\n        {\n          \"start\": 4,\n          \"end\": 8\n        }\n      ],\n      \"south\": [\n        {\n          \"start\": 10,\n          \"end\": 2\n        }\n      ]\n    }\n  },\n  {\n    \"id\": 11,\n    \"name\": \"Crawfish\",\n    \"location\": \"Pond\",\n    \"size\": \"Small\",\n    \"price\": 200,\n    \"time\": {\n      \"allDay\": true,\n      \"start\": null,\n      \"end\": null\n    },\n    \"months\": {\n      \"allYear\": false,\n      \"north\": [\n        {\n          \"start\": 4,\n          \"end\": 9\n        }\n      ],\n      \"south\": [\n        {\n          \"start\": 10,\n          \"end\": 3\n        }\n      ]\n    }\n  },\n  {\n    \"id\": 12,\n    \"name\": \"Soft-shelled Turtle\",\n    \"location\": \"River\",\n    \"size\": \"Large\",\n    \"price\": \"3,750\",\n    \"time\": {\n      \"allDay\": false,\n      \"start\": 16,\n      \"end\": 9\n    },\n    \"months\": {\n      \"allYear\": false,\n      \"north\": [\n        {\n          \"start\": 8,\n          \"end\": 9\n        }\n      ],\n      \"south\": [\n        {\n          \"start\": 2,\n          \"end\": 3\n        }\n      ]\n    }\n  },\n  {\n    \"id\": 13,\n    \"name\": \"Snapping Turtle\",\n    \"location\": \"River\",\n    \"size\": \"X Large\",\n    \"price\": \"5,000\",\n    \"time\": {\n      \"allDay\": false,\n      \"start\": 9,\n      \"end\": 4\n    },\n    \"months\": {\n      \"allYear\": false,\n      \"north\": [\n        {\n          \"start\": 4,\n          \"end\": 10\n        }\n      ],\n      \"south\": [\n        {\n          \"start\": 10,\n          \"end\": 4\n        }\n      ]\n    }\n  },\n  {\n    \"id\": 14,\n    \"name\": \"Tadpole\",\n    \"location\": \"Pond\",\n    \"size\": \"Smallest\",\n    \"price\": 100,\n    \"time\": {\n      \"allDay\": true,\n      \"start\": null,\n      \"end\": null\n    },\n    \"months\": {\n      \"allYear\": false,\n      \"north\": [\n        {\n          \"start\": 3,\n          \"end\": 7\n        }\n      ],\n      \"south\": [\n        {\n          \"start\": 9,\n          \"end\": 1\n        }\n      ]\n    }\n  },\n  {\n    \"id\": 15,\n    \"name\": \"Frog\",\n    \"location\": \"Pond\",\n    \"size\": \"Small\",\n    \"price\": 120,\n    \"time\": {\n      \"allDay\": true,\n      \"start\": null,\n      \"end\": null\n    },\n    \"months\": {\n      \"allYear\": false,\n      \"north\": [\n        {\n          \"start\": 5,\n          \"end\": 8\n        }\n      ],\n      \"south\": [\n        {\n          \"start\": 11,\n          \"end\": \"Feburary\"\n        }\n      ]\n    }\n  },\n  {\n    \"id\": 16,\n    \"name\": \"Freshwater Goby\",\n    \"location\": \"River\",\n    \"size\": \"Small\",\n    \"price\": 400,\n    \"time\": {\n      \"allDay\": false,\n      \"start\": 16,\n      \"end\": 9\n    },\n    \"months\": {\n      \"allYear\": true,\n      \"north\": [\n        {\n          \"start\": null,\n          \"end\": null\n        }\n      ],\n      \"south\": [\n        {\n          \"start\": null,\n          \"end\": null\n        }\n      ]\n    }\n  },\n  {\n    \"id\": 17,\n    \"name\": \"Loach\",\n    \"location\": \"River\",\n    \"size\": \"Small\",\n    \"price\": 400,\n    \"time\": {\n      \"allDay\": true,\n      \"start\": null,\n      \"end\": null\n    },\n    \"months\": {\n      \"allYear\": false,\n      \"north\": [\n        {\n          \"start\": 3,\n          \"end\": 5\n        }\n      ],\n      \"south\": [\n        {\n          \"start\": 9,\n          \"end\": 11\n        }\n      ]\n    }\n  },\n  {\n    \"id\": 18,\n    \"name\": \"Catfish\",\n    \"location\": \"Pond\",\n    \"size\": \"Large\",\n    \"price\": 800,\n    \"time\": {\n      \"allDay\": false,\n      \"start\": 16,\n      \"end\": 9\n    },\n    \"months\": {\n      \"allYear\": false,\n      \"north\": [\n        {\n          \"start\": 5,\n          \"end\": 10\n        }\n      ],\n      \"south\": [\n        {\n          \"start\": 11,\n          \"end\": 4\n        }\n      ]\n    }\n  },\n  {\n    \"id\": 19,\n    \"name\": \"Giant Snakehead\",\n    \"location\": \"Pond\",\n    \"size\": \"X Large\",\n    \"price\": \"5,500\",\n    \"time\": {\n      \"allDay\": false,\n      \"start\": 9,\n      \"end\": 16\n    },\n    \"months\": {\n      \"allYear\": false,\n      \"north\": [\n        {\n          \"start\": 6,\n          \"end\": 8\n        }\n      ],\n      \"south\": [\n        {\n          \"start\": 12,\n          \"end\": 2\n        }\n      ]\n    }\n  },\n  {\n    \"id\": 20,\n    \"name\": \"Bluegill\",\n    \"location\": \"River\",\n    \"size\": \"Small\",\n    \"price\": 180,\n    \"time\": {\n      \"allDay\": false,\n      \"start\": 9,\n      \"end\": 16\n    },\n    \"months\": {\n      \"allYear\": true,\n      \"north\": [\n        {\n          \"start\": null,\n          \"end\": null\n        }\n      ],\n      \"south\": [\n        {\n          \"start\": null,\n          \"end\": null\n        }\n      ]\n    }\n  },\n  {\n    \"id\": 21,\n    \"name\": \"Yellow Perch\",\n    \"location\": \"River\",\n    \"size\": \"Medium\",\n    \"price\": 300,\n    \"time\": {\n      \"allDay\": true,\n      \"start\": null,\n      \"end\": null\n    },\n    \"months\": {\n      \"allYear\": false,\n      \"north\": [\n        {\n          \"start\": 10,\n          \"end\": 3\n        }\n      ],\n      \"south\": [\n        {\n          \"start\": 4,\n          \"end\": 9\n        }\n      ]\n    }\n  },\n  {\n    \"id\": 22,\n    \"name\": \"Black Bass\",\n    \"location\": \"River\",\n    \"size\": \"Large\",\n    \"price\": 400,\n    \"time\": {\n      \"allDay\": true,\n      \"start\": null,\n      \"end\": null\n    },\n    \"months\": {\n      \"allYear\": true,\n      \"north\": [\n        {\n          \"start\": null,\n          \"end\": null\n        }\n      ],\n      \"south\": [\n        {\n          \"start\": null,\n          \"end\": null\n        }\n      ]\n    }\n  },\n  {\n    \"id\": 23,\n    \"name\": \"Tilapia\",\n    \"location\": \"River\",\n    \"size\": \"Medium\",\n    \"price\": 800,\n    \"time\": {\n      \"allDay\": true,\n      \"start\": null,\n      \"end\": null\n    },\n    \"months\": {\n      \"allYear\": false,\n      \"north\": [\n        {\n          \"start\": 6,\n          \"end\": 10\n        }\n      ],\n      \"south\": [\n        {\n          \"start\": 12,\n          \"end\": 4\n        }\n      ]\n    }\n  },\n  {\n    \"id\": 24,\n    \"name\": \"Pike\",\n    \"location\": \"River\",\n    \"size\": \"X Large\",\n    \"price\": \"1,800\",\n    \"time\": {\n      \"allDay\": true,\n      \"start\": null,\n      \"end\": null\n    },\n    \"months\": {\n      \"allYear\": false,\n      \"north\": [\n        {\n          \"start\": 9,\n          \"end\": 12\n        }\n      ],\n      \"south\": [\n        {\n          \"start\": 3,\n          \"end\": 6\n        }\n      ]\n    }\n  },\n  {\n    \"id\": 25,\n    \"name\": \"Pond Smelt\",\n    \"location\": \"River\",\n    \"size\": \"Small\",\n    \"price\": 500,\n    \"time\": {\n      \"allDay\": true,\n      \"start\": null,\n      \"end\": null\n    },\n    \"months\": {\n      \"allYear\": false,\n      \"north\": [\n        {\n          \"start\": 12,\n          \"end\": 2\n        }\n      ],\n      \"south\": [\n        {\n          \"start\": 6,\n          \"end\": 8\n        }\n      ]\n    }\n  },\n  {\n    \"id\": 26,\n    \"name\": \"Sweetfish\",\n    \"location\": \"River\",\n    \"size\": \"Medium\",\n    \"price\": 900,\n    \"time\": {\n      \"allDay\": true,\n      \"start\": null,\n      \"end\": null\n    },\n    \"months\": {\n      \"allYear\": false,\n      \"north\": [\n        {\n          \"start\": 7,\n          \"end\": 9\n        }\n      ],\n      \"south\": [\n        {\n          \"start\": 1,\n          \"end\": 3\n        }\n      ]\n    }\n  },\n  {\n    \"id\": 27,\n    \"name\": \"Cherry Salmon\",\n    \"location\": \"River (Clifftop)\",\n    \"size\": \"Medium\",\n    \"price\": \"1,000\",\n    \"time\": {\n      \"allDay\": false,\n      \"start\": 16,\n      \"end\": 9\n    },\n    \"months\": {\n      \"allYear\": false,\n      \"north\": [\n          {\n            \"start\": 3,\n            \"end\": 6\n          },\n          {\n            \"start\": 9,\n            \"end\": 11\n          }\n        ],\n      \"south\": [\n          {\n            \"start\": 3,\n            \"end\": 5\n          },\n          {\n            \"start\": 9,\n            \"end\": 12\n          }\n      ]\n    }\n  },\n  {\n    \"id\": 28,\n    \"name\": \"Char\",\n    \"location\": \"River (Clifftop)\",\n    \"size\": \"Medium\",\n    \"price\": \"3,800\",\n    \"time\": {\n      \"allDay\": false,\n      \"start\": 16,\n      \"end\": 9\n    },\n    \"months\": {\n      \"allYear\": false,\n      \"north\": [\n          {\n            \"start\": 3,\n            \"end\": 6\n          },\n          {\n            \"start\": 9,\n            \"end\": 11\n          }\n      ],\n      \"south\": [\n          {\n            \"start\": 3,\n            \"end\": 5\n          },\n          {\n            \"start\": 9,\n            \"end\": 12\n          }\n      ]\n    }\n  },\n  {\n    \"id\": 29,\n    \"name\": \"Golden Trout\",\n    \"location\": \"River (Clifftop)\",\n    \"size\": \"Medium\",\n    \"price\": \"15,000\",\n    \"time\": {\n      \"allDay\": false,\n      \"start\": 16,\n      \"end\": 9\n    },\n    \"months\": {\n      \"allYear\": false,\n      \"north\": [\n          {\n            \"start\": 3,\n            \"end\": 6\n          },\n          {\n            \"start\": 9,\n            \"end\": 11\n          }\n      ],\n      \"south\": [\n          {\n            \"start\": 3,\n            \"end\": 5\n          },\n          {\n            \"start\": 9,\n            \"end\": 12\n          }\n      ]\n    }\n  },\n  {\n    \"id\": 30,\n    \"name\": \"Stringfish\",\n    \"location\": \"River (Clifftop)\",\n    \"size\": \"Largest\",\n    \"price\": \"15,000\",\n    \"time\": {\n      \"allDay\": false,\n      \"start\": 16,\n      \"end\": 9\n    },\n    \"months\": {\n      \"allYear\": false,\n      \"north\": [\n        {\n          \"start\": 12,\n          \"end\": 3\n        }\n      ],\n      \"south\": [\n        {\n          \"start\": 6,\n          \"end\": 9\n        }\n      ]\n    }\n  },\n  {\n    \"id\": 31,\n    \"name\": \"Salmon\",\n    \"location\": \"River (mouth)\",\n    \"size\": \"Small\",\n    \"price\": 700,\n    \"time\": {\n      \"allDay\": true,\n      \"start\": null,\n      \"end\": null\n    },\n    \"months\": {\n      \"allYear\": false,\n      \"north\": [\n        {\n          \"start\": 9,\n          \"end\": 9\n        }\n      ],\n      \"south\": [\n        {\n          \"start\": 3,\n          \"end\": 3\n        }\n      ]\n    }\n  },\n  {\n    \"id\": 32,\n    \"name\": \"King Salmon\",\n    \"location\": \"River (mouth)\",\n    \"size\": \"Smallest\",\n    \"price\": \"1,800\",\n    \"time\": {\n      \"allDay\": true,\n      \"start\": null,\n      \"end\": null\n    },\n    \"months\": {\n      \"allYear\": false,\n      \"north\": [\n        {\n          \"start\": 9,\n          \"end\": 9\n        }\n      ],\n      \"south\": [\n        {\n          \"start\": 3,\n          \"end\": 3\n        }\n      ]\n    }\n  },\n  {\n    \"id\": 33,\n    \"name\": \"Mitten Crab\",\n    \"location\": \"River\",\n    \"size\": \"Small\",\n    \"price\": \"2,000\",\n    \"time\": {\n      \"allDay\": false,\n      \"start\": 16,\n      \"end\": 9\n    },\n    \"months\": {\n      \"allYear\": false,\n      \"north\": [\n        {\n          \"start\": 9,\n          \"end\": 11\n        }\n      ],\n      \"south\": [\n        {\n          \"start\": 3,\n          \"end\": 5\n        }\n      ]\n    }\n  },\n  {\n    \"id\": 34,\n    \"name\": \"Guppy\",\n    \"location\": \"River\",\n    \"size\": \"Smallest\",\n    \"price\": \"1,300\",\n    \"time\": {\n      \"allDay\": false,\n      \"start\": 9,\n      \"end\": 16\n    },\n    \"months\": {\n      \"allYear\": false,\n      \"north\": [\n        {\n          \"start\": 4,\n          \"end\": 11\n        }\n      ],\n      \"south\": [\n        {\n          \"start\": 10,\n          \"end\": 5\n        }\n      ]\n    }\n  },\n  {\n    \"id\": 35,\n    \"name\": \"Nibble Fish\",\n    \"location\": \"River\",\n    \"size\": \"Small\",\n    \"price\": \"1,500\",\n    \"time\": {\n      \"allDay\": false,\n      \"start\": 9,\n      \"end\": 16\n    },\n    \"months\": {\n      \"allYear\": false,\n      \"north\": [\n        {\n          \"start\": 5,\n          \"end\": 9\n        }\n      ],\n      \"south\": [\n        {\n          \"start\": 11,\n          \"end\": 3\n        }\n      ]\n    }\n  },\n  {\n    \"id\": 36,\n    \"name\": \"Angelfish\",\n    \"location\": \"River\",\n    \"size\": \"Small\",\n    \"price\": \"3,000\",\n    \"time\": {\n      \"allDay\": false,\n      \"start\": 16,\n      \"end\": 9\n    },\n    \"months\": {\n      \"allYear\": false,\n      \"north\": [\n        {\n          \"start\": 5,\n          \"end\": 10\n        }\n      ],\n      \"south\": [\n        {\n          \"start\": 11,\n          \"end\": 4\n        }\n      ]\n    }\n  },\n  {\n    \"id\": 37,\n    \"name\": \"Betta\",\n    \"location\": \"River\",\n    \"size\": \"Small\",\n    \"price\": \"2,500\",\n    \"time\": {\n      \"allDay\": false,\n      \"start\": 9,\n      \"end\": 16\n    },\n    \"months\": {\n      \"allYear\": false,\n      \"north\": [\n        {\n          \"start\": 5,\n          \"end\": 10\n        }\n      ],\n      \"south\": [\n        {\n          \"start\": 11,\n          \"end\": 4\n        }\n      ]\n    }\n  },\n  {\n    \"id\": 38,\n    \"name\": \"Neon Tetra\",\n    \"location\": \"River\",\n    \"size\": \"Smallest\",\n    \"price\": 500,\n    \"time\": {\n      \"allDay\": false,\n      \"start\": 9,\n      \"end\": 16\n    },\n    \"months\": {\n      \"allYear\": false,\n      \"north\": [\n        {\n          \"start\": 4,\n          \"end\": 11\n        }\n      ],\n      \"south\": [\n        {\n          \"start\": 10,\n          \"end\": 5\n        }\n      ]\n    }\n  },\n  {\n    \"id\": 39,\n    \"name\": \"Rainbowfish\",\n    \"location\": \"River\",\n    \"size\": \"Small\",\n    \"price\": 800,\n    \"time\": {\n      \"allDay\": false,\n      \"start\": 9,\n      \"end\": 16\n    },\n    \"months\": {\n      \"allYear\": false,\n      \"north\": [\n        {\n          \"start\": 5,\n          \"end\": 10\n        }\n      ],\n      \"south\": [\n        {\n          \"start\": 11,\n          \"end\": 4\n        }\n      ]\n    }\n  },\n  {\n    \"id\": 40,\n    \"name\": \"Piranha\",\n    \"location\": \"River\",\n    \"size\": \"Small\",\n    \"price\": \"2,500\",\n    \"time\": {\n      \"allDay\": false,\n      \"start\": 9,\n      \"end\": 4\n    },\n    \"months\": {\n      \"allYear\": false,\n      \"north\": [\n        {\n          \"start\": 6,\n          \"end\": 9\n        }\n      ],\n      \"south\": [\n        {\n          \"start\": 12,\n          \"end\": 3\n        }\n      ]\n    }\n  },\n  {\n    \"id\": 41,\n    \"name\": \"Arowana\",\n    \"location\": \"River\",\n    \"size\": \"Large\",\n    \"price\": \"10,000\",\n    \"time\": {\n      \"allDay\": false,\n      \"start\": 16,\n      \"end\": 9\n    },\n    \"months\": {\n      \"allYear\": false,\n      \"north\": [\n        {\n          \"start\": 6,\n          \"end\": 9\n        }\n      ],\n      \"south\": [\n        {\n          \"start\": 12,\n          \"end\": 3\n        }\n      ]\n    }\n  },\n  {\n    \"id\": 42,\n    \"name\": \"Dorado\",\n    \"location\": \"River\",\n    \"size\": \"X Large\",\n    \"price\": \"15,000\",\n    \"time\": {\n      \"allDay\": false,\n      \"start\": 4,\n      \"end\": 21\n    },\n    \"months\": {\n      \"allYear\": false,\n      \"north\": [\n        {\n          \"start\": 6,\n          \"end\": 9\n        }\n      ],\n      \"south\": [\n        {\n          \"start\": 12,\n          \"end\": 3\n        }\n      ]\n    }\n  },\n  {\n    \"id\": 43,\n    \"name\": \"Gar\",\n    \"location\": \"Pond\",\n    \"size\": \"Largest\",\n    \"price\": \"6,000\",\n    \"time\": {\n      \"allDay\": false,\n      \"start\": 16,\n      \"end\": 9\n    },\n    \"months\": {\n      \"allYear\": false,\n      \"north\": [\n        {\n          \"start\": 6,\n          \"end\": 9\n        }\n      ],\n      \"south\": [\n        {\n          \"start\": 12,\n          \"end\": 3\n        }\n      ]\n    }\n  },\n  {\n    \"id\": 44,\n    \"name\": \"Arapaima\",\n    \"location\": \"River\",\n    \"size\": \"Largest\",\n    \"price\": \"10,000\",\n    \"time\": {\n      \"allDay\": false,\n      \"start\": 16,\n      \"end\": 9\n    },\n    \"months\": {\n      \"allYear\": false,\n      \"north\": [\n        {\n          \"start\": 6,\n          \"end\": 9\n        }\n      ],\n      \"south\": [\n        {\n          \"start\": 12,\n          \"end\": 3\n        }\n      ]\n    }\n  },\n  {\n    \"id\": 45,\n    \"name\": \"Saddled Bichir\",\n    \"location\": \"River\",\n    \"size\": \"Large\",\n    \"price\": \"4,000\",\n    \"time\": {\n      \"allDay\": false,\n      \"start\": 21,\n      \"end\": 4\n    },\n    \"months\": {\n      \"allYear\": false,\n      \"north\": [\n        {\n          \"start\": 6,\n          \"end\": 9\n        }\n      ],\n      \"south\": [\n        {\n          \"start\": 12,\n          \"end\": 3\n        }\n      ]\n    }\n  },\n  {\n    \"id\": 46,\n    \"name\": \"Sturgeon\",\n    \"location\": \"River (mouth)\",\n    \"size\": \"Largest\",\n    \"price\": \"10,000\",\n    \"time\": {\n      \"allDay\": true,\n      \"start\": null,\n      \"end\": null\n    },\n    \"months\": {\n      \"allYear\": false,\n      \"north\": [\n        {\n          \"start\": 9,\n          \"end\": 3\n        }\n      ],\n      \"south\": [\n        {\n          \"start\": 3,\n          \"end\": 9\n        }\n      ]\n    }\n  },\n  {\n    \"id\": 47,\n    \"name\": \"Sea Butterfly\",\n    \"location\": \"Sea\",\n    \"size\": \"Smallest\",\n    \"price\": \"1,000\",\n    \"time\": {\n      \"allDay\": true,\n      \"start\": null,\n      \"end\": null\n    },\n    \"months\": {\n      \"allYear\": false,\n      \"north\": [\n        {\n          \"start\": 12,\n          \"end\": 3\n        }\n      ],\n      \"south\": [\n        {\n          \"start\": 6,\n          \"end\": 9\n        }\n      ]\n    }\n  },\n  {\n    \"id\": 48,\n    \"name\": \"Sea Horse\",\n    \"location\": \"Sea\",\n    \"size\": \"Smallest\",\n    \"price\": \"1,100\",\n    \"time\": {\n      \"allDay\": true,\n      \"start\": null,\n      \"end\": null\n    },\n    \"months\": {\n      \"allYear\": false,\n      \"north\": [\n        {\n          \"start\": 4,\n          \"end\": 11\n        }\n      ],\n      \"south\": [\n        {\n          \"start\": 10,\n          \"end\": 5\n        }\n      ]\n    }\n  },\n  {\n    \"id\": 49,\n    \"name\": \"Clown Fish\",\n    \"location\": \"Sea\",\n    \"size\": \"Smallest\",\n    \"price\": 650,\n    \"time\": {\n      \"allDay\": true,\n      \"start\": null,\n      \"end\": null\n    },\n    \"months\": {\n      \"allYear\": false,\n      \"north\": [\n        {\n          \"start\": 4,\n          \"end\": 9\n        }\n      ],\n      \"south\": [\n        {\n          \"start\": 10,\n          \"end\": 3\n        }\n      ]\n    }\n  },\n  {\n    \"id\": 50,\n    \"name\": \"Surgeonfish\",\n    \"location\": \"Sea\",\n    \"size\": \"Small\",\n    \"price\": \"1,000\",\n    \"time\": {\n      \"allDay\": true,\n      \"start\": null,\n      \"end\": null\n    },\n    \"months\": {\n      \"allYear\": false,\n      \"north\": [\n        {\n          \"start\": 4,\n          \"end\": 9\n        }\n      ],\n      \"south\": [\n        {\n          \"start\": 10,\n          \"end\": 3\n        }\n      ]\n    }\n  },\n  {\n    \"id\": 51,\n    \"name\": \"Butterfly Fish\",\n    \"location\": \"Sea\",\n    \"size\": \"Small\",\n    \"price\": \"1,000\",\n    \"time\": {\n      \"allDay\": true,\n      \"start\": null,\n      \"end\": null\n    },\n    \"months\": {\n      \"allYear\": false,\n      \"north\": [\n        {\n          \"start\": 4,\n          \"end\": 9\n        }\n      ],\n      \"south\": [\n        {\n          \"start\": 10,\n          \"end\": 3\n        }\n      ]\n    }\n  },\n  {\n    \"id\": 52,\n    \"name\": \"Napoleonfish\",\n    \"location\": \"Sea\",\n    \"size\": \"Largest\",\n    \"price\": \"10,000\",\n    \"time\": {\n      \"allDay\": false,\n      \"start\": 4,\n      \"end\": 21\n    },\n    \"months\": {\n      \"allYear\": false,\n      \"north\": [\n        {\n          \"start\": 7,\n          \"end\": 8\n        }\n      ],\n      \"south\": [\n        {\n          \"start\": 1,\n          \"end\": 2\n        }\n      ]\n    }\n  },\n  {\n    \"id\": 53,\n    \"name\": \"Zebra Turkeyfish\",\n    \"location\": \"Sea\",\n    \"size\": \"Medium\",\n    \"price\": 500,\n    \"time\": {\n      \"allDay\": true,\n      \"start\": null,\n      \"end\": null\n    },\n    \"months\": {\n      \"allYear\": false,\n      \"north\": [\n        {\n          \"start\": 4,\n          \"end\": 11\n        }\n      ],\n      \"south\": [\n        {\n          \"start\": 10,\n          \"end\": 5\n        }\n      ]\n    }\n  },\n  {\n    \"id\": 54,\n    \"name\": \"Blowfish\",\n    \"location\": \"Sea\",\n    \"size\": \"Medium\",\n    \"price\": \"5,000\",\n    \"time\": {\n      \"allDay\": false,\n      \"start\": 18,\n      \"end\": 4\n    },\n    \"months\": {\n      \"allYear\": false,\n      \"north\": [\n        {\n          \"start\": 11,\n          \"end\": 2\n        }\n      ],\n      \"south\": [\n        {\n          \"start\": 5,\n          \"end\": 8\n        }\n      ]\n    }\n  },\n  {\n    \"id\": 55,\n    \"name\": \"Puffer Fish\",\n    \"location\": \"Sea\",\n    \"size\": \"Medium\",\n    \"price\": 250,\n    \"time\": {\n      \"allDay\": true,\n      \"start\": null,\n      \"end\": null\n    },\n    \"months\": {\n      \"allYear\": false,\n      \"north\": [\n        {\n          \"start\": 7,\n          \"end\": 9\n        }\n      ],\n      \"south\": [\n        {\n          \"start\": 1,\n          \"end\": 3\n        }\n      ]\n    }\n  },\n  {\n    \"id\": 56,\n    \"name\": \"Anchovy\",\n    \"location\": \"Sea\",\n    \"size\": \"Small\",\n    \"price\": 200,\n    \"time\": {\n      \"allDay\": false,\n      \"start\": 4,\n      \"end\": 21\n    },\n    \"months\": {\n      \"allYear\": true,\n      \"north\": [\n        {\n          \"start\": null,\n          \"end\": null\n        }\n      ],\n      \"south\": [\n        {\n          \"start\": null,\n          \"end\": null\n        }\n      ]\n    }\n  },\n  {\n    \"id\": 57,\n    \"name\": \"Horse Mackerel\",\n    \"location\": \"Sea\",\n    \"size\": \"Small\",\n    \"price\": 150,\n    \"time\": {\n      \"allDay\": true,\n      \"start\": null,\n      \"end\": null\n    },\n    \"months\": {\n      \"allYear\": true,\n      \"north\": [\n        {\n          \"start\": null,\n          \"end\": null\n        }\n      ],\n      \"south\": [\n        {\n          \"start\": null,\n          \"end\": null\n        }\n      ]\n    }\n  },\n  {\n    \"id\": 58,\n    \"name\": \"Barred Knifejaw\",\n    \"location\": \"Sea\",\n    \"size\": \"Medium\",\n    \"price\": \"5,000\",\n    \"time\": {\n      \"allDay\": true,\n      \"start\": null,\n      \"end\": null\n    },\n    \"months\": {\n      \"allYear\": false,\n      \"north\": [\n        {\n          \"start\": 3,\n          \"end\": 11\n        }\n      ],\n      \"south\": [\n        {\n          \"start\": 9,\n          \"end\": 5\n        }\n      ]\n    }\n  },\n  {\n    \"id\": 59,\n    \"name\": \"Sea Bass\",\n    \"location\": \"Sea\",\n    \"size\": \"X Large\",\n    \"price\": 400,\n    \"time\": {\n      \"allDay\": true,\n      \"start\": null,\n      \"end\": null\n    },\n    \"months\": {\n      \"allYear\": true,\n      \"north\": [\n        {\n          \"start\": null,\n          \"end\": null\n        }\n      ],\n      \"south\": [\n        {\n          \"start\": null,\n          \"end\": null\n        }\n      ]\n    }\n  },\n  {\n    \"id\": 60,\n    \"name\": \"Red Snapper\",\n    \"location\": \"Sea\",\n    \"size\": \"Large\",\n    \"price\": \"3,000\",\n    \"time\": {\n      \"allDay\": true,\n      \"start\": null,\n      \"end\": null\n    },\n    \"months\": {\n      \"allYear\": true,\n      \"north\": [\n        {\n          \"start\": null,\n          \"end\": null\n        }\n      ],\n      \"south\": [\n        {\n          \"start\": null,\n          \"end\": null\n        }\n      ]\n    }\n  },\n  {\n    \"id\": 61,\n    \"name\": \"Dab\",\n    \"location\": \"Sea\",\n    \"size\": \"Medium\",\n    \"price\": 300,\n    \"time\": {\n      \"allDay\": true,\n      \"start\": null,\n      \"end\": null\n    },\n    \"months\": {\n      \"allYear\": false,\n      \"north\": [\n        {\n          \"start\": 10,\n          \"end\": 4\n        }\n      ],\n      \"south\": [\n        {\n          \"start\": 4,\n          \"end\": 10\n        }\n      ]\n    }\n  },\n  {\n    \"id\": 62,\n    \"name\": \"Olive Flounder\",\n    \"location\": \"Sea\",\n    \"size\": \"Large\",\n    \"price\": 800,\n    \"time\": {\n      \"allDay\": true,\n      \"start\": null,\n      \"end\": null\n    },\n    \"months\": {\n      \"allYear\": true,\n      \"north\": [\n        {\n          \"start\": null,\n          \"end\": null\n        }\n      ],\n      \"south\": [\n        {\n          \"start\": null,\n          \"end\": null\n        }\n      ]\n    }\n  },\n  {\n    \"id\": 63,\n    \"name\": \"Squid\",\n    \"location\": \"Sea\",\n    \"size\": \"Medium\",\n    \"price\": 500,\n    \"time\": {\n      \"allDay\": true,\n      \"start\": null,\n      \"end\": null\n    },\n    \"months\": {\n      \"allYear\": false,\n      \"north\": [\n        {\n          \"start\": 12,\n          \"end\": 8\n        }\n      ],\n      \"south\": [\n        {\n          \"start\": 6,\n          \"end\": 2\n        }\n      ]\n    }\n  },\n  {\n    \"id\": 64,\n    \"name\": \"Moray Eel\",\n    \"location\": \"Sea\",\n    \"size\": \"X Large\",\n    \"price\": \"2,000\",\n    \"time\": {\n      \"allDay\": true,\n      \"start\": null,\n      \"end\": null\n    },\n    \"months\": {\n      \"allYear\": false,\n      \"north\": [\n        {\n          \"start\": 8,\n          \"end\": 10\n        }\n      ],\n      \"south\": [\n        {\n          \"start\": 2,\n          \"end\": 4\n        }\n      ]\n    }\n  },\n  {\n    \"id\": 65,\n    \"name\": \"Ribbon Eel\",\n    \"location\": \"Sea\",\n    \"size\": \"Narrow\",\n    \"price\": 600,\n    \"time\": {\n      \"allDay\": true,\n      \"start\": null,\n      \"end\": null\n    },\n    \"months\": {\n      \"allYear\": false,\n      \"north\": [\n        {\n          \"start\": 6,\n          \"end\": 10\n        }\n      ],\n      \"south\": [\n        {\n          \"start\": 12,\n          \"end\": 4\n        }\n      ]\n    }\n  },\n  {\n    \"id\": 66,\n    \"name\": \"Tuna\",\n    \"location\": \"Pier\",\n    \"size\": \"X Large\",\n    \"price\": \"7,000\",\n    \"time\": {\n      \"allDay\": true,\n      \"start\": null,\n      \"end\": null\n    },\n    \"months\": {\n      \"allYear\": false,\n      \"north\": [\n        {\n          \"start\": 11,\n          \"end\": 4\n        }\n      ],\n      \"south\": [\n        {\n          \"start\": 5,\n          \"end\": 10\n        }\n      ]\n    }\n  },\n  {\n    \"id\": 67,\n    \"name\": \"Blue Marlin\",\n    \"location\": \"Pier\",\n    \"size\": \"X Large\",\n    \"price\": \"10,000\",\n    \"time\": {\n      \"allDay\": true,\n      \"start\": null,\n      \"end\": null\n    },\n    \"months\": {\n      \"allYear\": false,\n      \"north\": [\n          {\n            \"start\": 7,\n            \"end\": 9\n          },\n          {\n            \"start\": 11,\n            \"end\": 4\n          }\n      ],\n      \"south\": [\n          {\n            \"start\": 1,\n            \"end\": 3\n          },\n          {\n            \"start\": 5,\n            \"end\": 11\n          }\n      ]\n    }\n  },\n  {\n    \"id\": 68,\n    \"name\": \"Giant Trevally\",\n    \"location\": \"Pier\",\n    \"size\": \"Large\",\n    \"price\": \"4,500\",\n    \"time\": {\n      \"allDay\": true,\n      \"start\": null,\n      \"end\": null\n    },\n    \"months\": {\n      \"allYear\": false,\n      \"north\": [\n        {\n          \"start\": 5,\n          \"end\": 10\n        }\n      ],\n      \"south\": [\n        {\n          \"start\": 11,\n          \"end\": 4\n        }\n      ]\n    }\n  },\n  {\n    \"id\": 69,\n    \"name\": \"Mahi-mahi\",\n    \"location\": \"Sea\",\n    \"size\": \"Large\",\n    \"price\": \"6,000\",\n    \"time\": {\n      \"allDay\": true,\n      \"start\": null,\n      \"end\": null\n    },\n    \"months\": {\n      \"allYear\": false,\n      \"north\": [\n        {\n          \"start\": 5,\n          \"end\": 10\n        }\n      ],\n      \"south\": [\n        {\n          \"start\": 11,\n          \"end\": 4\n        }\n      ]\n    }\n  },\n  {\n    \"id\": 70,\n    \"name\": \"Ocean Sunfish\",\n    \"location\": \"Sea\",\n    \"size\": \"Largest (Fin)\",\n    \"price\": \"4,000\",\n    \"time\": {\n      \"allDay\": false,\n      \"start\": 4,\n      \"end\": 21\n    },\n    \"months\": {\n      \"allYear\": false,\n      \"north\": [\n        {\n          \"start\": 7,\n          \"end\": 9\n        }\n      ],\n      \"south\": [\n        {\n          \"start\": 1,\n          \"end\": 3\n        }\n      ]\n    }\n  },\n  {\n    \"id\": 71,\n    \"name\": \"Ray\",\n    \"location\": \"Sea\",\n    \"size\": \"X Large\",\n    \"price\": \"3,000\",\n    \"time\": {\n      \"allDay\": false,\n      \"start\": 4,\n      \"end\": 21\n    },\n    \"months\": {\n      \"allYear\": false,\n      \"north\": [\n        {\n          \"start\": 8,\n          \"end\": 11\n        }\n      ],\n      \"south\": [\n        {\n          \"start\": 2,\n          \"end\": 5\n        }\n      ]\n    }\n  },\n  {\n    \"id\": 72,\n    \"name\": \"Saw Shark\",\n    \"location\": \"Sea\",\n    \"size\": \"Largest (Fin)\",\n    \"price\": \"12,000\",\n    \"time\": {\n      \"allDay\": false,\n      \"start\": 16,\n      \"end\": 9\n    },\n    \"months\": {\n      \"allYear\": false,\n      \"north\": [\n        {\n          \"start\": 6,\n          \"end\": 9\n        }\n      ],\n      \"south\": [\n        {\n          \"start\": 12,\n          \"end\": 3\n        }\n      ]\n    }\n  },\n  {\n    \"id\": 73,\n    \"name\": \"Hammerhead Shark\",\n    \"location\": \"Sea\",\n    \"size\": \"Largest (Fin)\",\n    \"price\": \"8,000\",\n    \"time\": {\n      \"allDay\": false,\n      \"start\": 16,\n      \"end\": 9\n    },\n    \"months\": {\n      \"allYear\": false,\n      \"north\": [\n        {\n          \"start\": 6,\n          \"end\": 9\n        }\n      ],\n      \"south\": [\n        {\n          \"start\": 12,\n          \"end\": 3\n        }\n      ]\n    }\n  },\n  {\n    \"id\": 74,\n    \"name\": \"Great White Shark\",\n    \"location\": \"Sea\",\n    \"size\": \"Largest (Fin)\",\n    \"price\": \"15,000\",\n    \"time\": {\n      \"allDay\": false,\n      \"start\": 16,\n      \"end\": 9\n    },\n    \"months\": {\n      \"allYear\": false,\n      \"north\": [\n        {\n          \"start\": 6,\n          \"end\": 9\n        }\n      ],\n      \"south\": [\n        {\n          \"start\": 12,\n          \"end\": 3\n        }\n      ]\n    }\n  },\n  {\n    \"id\": 75,\n    \"name\": \"Whale Shark\",\n    \"location\": \"Sea\",\n    \"size\": \"Largest (Fin)\",\n    \"price\": \"13,000\",\n    \"time\": {\n      \"allDay\": true,\n      \"start\": null,\n      \"end\": null\n    },\n    \"months\": {\n      \"allYear\": false,\n      \"north\": [\n        {\n          \"start\": 6,\n          \"end\": 9\n        }\n      ],\n      \"south\": [\n        {\n          \"start\": 12,\n          \"end\": 3\n        }\n      ]\n    }\n  },\n  {\n    \"id\": 76,\n    \"name\": \"Suckerfish\",\n    \"location\": \"Sea\",\n    \"size\": \"Largest (Fin)\",\n    \"price\": \"1,500\",\n    \"time\": {\n      \"allDay\": true,\n      \"start\": null,\n      \"end\": null\n    },\n    \"months\": {\n      \"allYear\": false,\n      \"north\": [\n        {\n          \"start\": 6,\n          \"end\": 9\n        }\n      ],\n      \"south\": [\n        {\n          \"start\": 12,\n          \"end\": 3\n        }\n      ]\n    }\n  },\n  {\n    \"id\": 77,\n    \"name\": \"Football Fish\",\n    \"location\": \"Sea\",\n    \"size\": \"Large\",\n    \"price\": \"2,500\",\n    \"time\": {\n      \"allDay\": false,\n      \"start\": 16,\n      \"end\": 9\n    },\n    \"months\": {\n      \"allYear\": false,\n      \"north\": [\n        {\n          \"start\": 11,\n          \"end\": 3\n        }\n      ],\n      \"south\": [\n        {\n          \"start\": 5,\n          \"end\": 9\n        }\n      ]\n    }\n  },\n  {\n    \"id\": 78,\n    \"name\": \"Oarfish\",\n    \"location\": \"Sea\",\n    \"size\": \"Largest\",\n    \"price\": \"9,000\",\n    \"time\": {\n      \"allDay\": true,\n      \"start\": null,\n      \"end\": null\n    },\n    \"months\": {\n      \"allYear\": false,\n      \"north\": [\n        {\n          \"start\": 12,\n          \"end\": 5\n        }\n      ],\n      \"south\": [\n        {\n          \"start\": 6,\n          \"end\": 11\n        }\n      ]\n    }\n  },\n  {\n    \"id\": 79,\n    \"name\": \"Barreleye\",\n    \"location\": \"Sea\",\n    \"size\": \"Small\",\n    \"price\": \"15,000\",\n    \"time\": {\n      \"allDay\": false,\n      \"start\": 21,\n      \"end\": 4\n    },\n    \"months\": {\n      \"allYear\": true,\n      \"north\": [\n        {\n          \"start\": null,\n          \"end\": null\n        }\n      ],\n      \"south\": [\n        {\n          \"start\": null,\n          \"end\": null\n        }\n      ]\n    }\n  },\n  {\n    \"id\": 80,\n    \"name\": \"Coelacanth\",\n    \"location\": \"Sea (rainy days)\",\n    \"size\": \"Largest\",\n    \"price\": \"15,000\",\n    \"time\": {\n      \"allDay\": true,\n      \"start\": null,\n      \"end\": null\n    },\n    \"months\": {\n      \"allYear\": true,\n      \"north\": [\n        {\n          \"start\": null,\n          \"end\": null\n        }\n      ],\n      \"south\": [\n        {\n          \"start\": null,\n          \"end\": null\n        }\n      ]\n    }\n  }\n]`);\n","import Vue from 'vue';\nimport Vuex from 'vuex';\nimport fishData from '../data/fish';\n\nVue.use(Vuex);\n\nexport default new Vuex.Store({\n  state: {\n    hemisphere: 'north',\n    time: '00:00:00',\n    month: 1,\n    fish: fishData.map((f) => ({\n      ...f,\n      caught: false,\n      canCatch: false,\n    })),\n  },\n  getters: {\n    hour(state) {\n      return parseInt(state.time.split(':')[0], 10);\n    },\n  },\n  mutations: {\n    updateHemisphere(state, value) {\n      state.hemisphere = value;\n    },\n    updateTime(state, value) {\n      state.time = value;\n    },\n    updateMonth(state, value) {\n      state.month = value;\n    },\n    updateCanCatch(state, { id, value, list }) {\n      const index = state[list].findIndex((i) => i.id === id);\n      state[list][index].canCatch = value;\n    },\n    updateCaught(state, { id, value, list }) {\n      const index = state[list].findIndex((i) => i.id === id);\n      state[list][index].caught = value;\n    },\n  },\n  actions: {\n    updateHemisphere({ commit }, value) {\n      commit('updateHemisphere', value);\n    },\n    updateTime({ commit }, value) {\n      commit('updateTime', value);\n    },\n    updateMonth({ commit }, value) {\n      commit('updateMonth', value);\n    },\n    updateCanCatch({ commit }, { id, value, list }) {\n      commit('updateCanCatch', { id, value, list });\n    },\n    updateCaught({ commit }, { id, value, list }) {\n      commit('updateCaught', { id, value, list });\n    },\n  },\n  modules: {\n  },\n});\n","import Vue from 'vue';\nimport { BootstrapVue, IconsPlugin } from 'bootstrap-vue';\nimport App from './App.vue';\nimport store from './store';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap-vue/dist/bootstrap-vue.css';\n\nVue.config.productionTip = false;\n\nVue.use(BootstrapVue);\nVue.use(IconsPlugin);\n\nnew Vue({\n  store,\n  render: (h) => h(App),\n}).$mount('#app');\n","exports.months = {\n  1: 'January',\n  2: 'February',\n  3: 'March',\n  4: 'April',\n  5: 'May',\n  6: 'June',\n  7: 'July',\n  8: 'August',\n  9: 'September',\n  10: 'October',\n  11: 'November',\n  12: 'December',\n};\n"],"sourceRoot":""}